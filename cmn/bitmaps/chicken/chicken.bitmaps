/*
 *  XEvil(TM) Copyright (C) 1994,1999  Steve Hardt and Michael Judge
 *  
 *  The file, license.txt, distributed along with this source code contains
 *  the license agreement for the XEvil source code and executable.
 *  If you do not have this file, obtain a copy from 
 *  http://www.xevil.com/docs/license.txt
 * 
 *  http://www.xevil.com
 *  satan@xevil.com
 */


#if X11  
#include "gen_xpm/chicken/chicken_0.xpm"
#include "gen_xpm/chicken/chicken_0b.xpm"
#include "gen_xpm/chicken/chicken_0c.xpm"
#include "gen_xpm/chicken/chicken_2.xpm"
#include "gen_xpm/chicken/chicken_2b.xpm"
#include "gen_xpm/chicken/chicken_4.xpm"
#include "gen_xpm/chicken/chicken_4b.xpm"
#include "gen_xpm/chicken/chicken_5.xpm"
#include "gen_xpm/chicken/chicken_25.xpm"
#include "gen_xpm/chicken/chicken_26.xpm"
#include "gen_xpm/chicken/chicken_28.xpm"
#include "gen_xpm/chicken/chicken_38.xpm"
#include "gen_xpm/chicken/chicken_39.xpm"
#endif


  
Size Chicken::get_size_max() {
  return creatureContext.movingContext.physicalContext.sizeMax;
}



PhysicalP Chicken::create(void *,WorldP w,LocatorP l,const Pos &pos) {
  PhysicalP ret = new Chicken(w,l,pos);
  assert(ret);
  return ret;
}



CreatureXdata Chicken::creatureXdata;
FlyingXdata Chicken::flyingXdata;
FighterXdata Chicken::fighterXdata;



const CreatureContext Chicken::creatureContext =
{ /** CreatureContext **/
  5, /* crawlSpeed */
  5, /* centerSpeed */
  4, /* airSpeed */
  0, /* climbSpeed */
  5,  /* jump */
  2,  /* acceleration */ 
  90, /* corpseHealth */
  
  True, /* biological */
  (DROPLET_BLOOD | DROPLET_FEATHER), /* dropletSet */
  SoundNames::SEAL_DEATH,  // Need a better death sound.

  {/** MovingContext **/
#if X11
    "chocolate4",False,
    "white",True,
#endif

#if WIN32
    RGB(0,0,0)/*"black"*/,FALSE,
    RGB(128,0,0)/*"tan"*/,TRUE,
#endif
    /* animMax */
    {4,4,2,2,2,1,
     0,
     0,0,
     0,
     0,0,
     0,
     0,0,
     0,
     0,0,
     0,
     0,0,
     2,2,
     0,0,
     1, /* deadAnimMax */
     
     /* Fighter attack animMax */
     1,1,1,1,0,0,1,1,0,0,0,0,1,1,
    },
    
    /* sizes */
    {{15,23},{15,23},{19,23},{19,23},{25,24},{21,24},
       {0,0},
       {0,0},{0,0},
       {0,0},
       {0,0},{0,0},
       {0,0},
       {0,0},{0,0},
       {0,0},
       {0,0},{0,0},
       {0,0},           /* Must be    */
       {0,0},{0,0},     /* same size. */
       {25,24},{25,24},
       {0,0},{0,0},
	   {19,11}, /* deadSize */
     
     /* Fighter attack sizes */
     {17,21}, /* center_R */
     {17,21}, /* center_L */
     {24,15}, /* air_R */
     {24,15}, /* air_L */
     {0,0}, /* r_DN */
     {0,0}, /* r_UP */
     {17,21}, /* dn_R */
     {17,21}, /* dn_L */
     {0,0}, /* l_DN */
     {0,0}, /* l_UP */
     {0,0}, /* up_R */
     {0,0}, /* up_L */
     {18,24},  /* air_UP */
     {17,20},  /* air_DN */
    },

    {{0}}, /* offsets */
    
    /* pixmapBits */
    {{CMN_ID(chicken_0,IDB_CHICKEN0),CMN_ID(chicken_0b,IDB_CHICKEN0B),
	  CMN_ID(chicken_0c,IDB_CHICKEN0C),CMN_ID(chicken_0b,IDB_CHICKEN0B)},
     {PH_AUTO_GEN},
     {CMN_ID(chicken_2,IDB_CHICKEN2),CMN_ID(chicken_2b,IDB_CHICKEN2B)},
	 {PH_AUTO_GEN},
     {CMN_ID(chicken_4,IDB_CHICKEN4),
	  CMN_ID(chicken_4b,IDB_CHICKEN4B)},
     {CMN_ID(chicken_5,IDB_CHICKEN5)},
      {0},
      {0},{0},
      {0},
      {0},{0},
      {0},
      {0},{0},
      {0},
      {0},{0},
      {0},
      {0},{0},
	  {PH_AUTO_GEN},
	  {PH_AUTO_GEN},
      {0},{0},
      {CMN_ID(chicken_25,IDB_CHICKENDEAD)}, /* dead*/

     /* Fighter attack bitmaps */
     {CMN_ID(chicken_26,IDB_CHICKEN0_ATT)},   /* center_R */
     {PH_AUTO_GEN},         /* center_L */
     {CMN_ID(chicken_28,IDB_CHICKEN2_ATT)},   /* air_R */
     {PH_AUTO_GEN},         /* air_L */
     {0},         /* r_DN */
     {0},         /* r_UP */
     {CMN_ID(chicken_26,IDB_CHICKEN0_ATT)},   /* dn_R */
     {PH_AUTO_GEN},         /* dn_L */
     {0},         /* l_DN */
     {0},         /* l_UP */
     {0},         /* up_R */
     {0},         /* up_L */
     {CMN_ID(chicken_38,IDB_CHICKEN21_ATT)},  /* air_UP */
     {CMN_ID(chicken_39,IDB_CHICKEN22_ATT)},  /* air_DN */
     },
    
    /* maskBits */
	{{0}},

    {/** PhysicalContext **/
      185, /* health */
      320, /* mass */
      A_Chicken, /* classId */
      "chicken", /* className */

      True, /* transmogifyTarget */
      True, /* doppelUser */
      False, /* potentialHuman */
      False, /* potentialEnemy */
      8, /* enemyWeight */
      False, /* potentialWeapon */
      False, /* potentialOtherItem */
      0.0f, /* objectWorldPercent */
      0, /* levelMaxTimes */
      {25,24}, /* sizeMax */
      Chicken::create, /* create */
      False, /* statsCreations */
      False, /* statsUses */
      True, /* statsDeaths */
      Chicken::get_stats, /* get_stats */
      NULL, /* arg */
      Chicken::init_x, /* init_x */
      Chicken::create_from_stream, /* create_from_stream */
    },
    True, /* hiRes */
		Fighter::offset_generator, /* offsetGenerator */
		&Fighter::transformOverride, /* transformOverride */
    True, /* useXPM */
		False, /* invisibility */
  },
};



const FlyingContext Chicken::flyingContext =
{ /** FlyingContext **/
  3, /* gravTime */
};



const FighterContext Chicken::fighterContext = 
{ /** FighterContext **/
#if X11
  "chocolate4", /* foreground */
  "white", /* background */
#endif
#if WIN32
	RGB(0,0,0), /* foreground */
	RGB(128,0,0), /* background */
#endif
  3, /* slide */
  9, /* jumpHorizontal */
  9, /* jumpVertical */ 
  15, /* damageStuck */
  20, /* damageFree */
  
  /* hotSpots */
  {{16,6},{0,0},{23,7},{0,0},{0},{0},
   {0},
   {0},{0},
   {0},
   {16,6},{0,0},
   {0},
   {0},{0},
   {0},
   {0},{0},
   {0},
   {0},{0},
   {10,0},{3,19},},

  SoundNames::HERO_ATTACK,
};


